{"version":3,"sources":["questionMarkIcon.png","01_title_attribute/TitleAttributeBad.js","01_title_attribute/TitleAttributeGood.js","02_short_content_hover_focus/ShortContentBad.js","02_short_content_hover_focus/ShortContentGood.js","App.js","index.js"],"names":["TitleAttributeBad","src","QuestionMarkIcon","height","width","title","alt","TitleAttributeGood","ShortContentHoverFocusBad","content","Tooltip","children","useState","showTooltip","setShowTooltip","className","onMouseEnter","onMouseLeave","ShortContentHoverFocusGood","tabIndex","onFocus","onBlur","id","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAAe,G,MAAA,IAA0B,8C,OCE5BA,EAAoB,kBAC/B,oFACsD,IACpD,qBACEC,IAAKC,EACLC,OAAO,KACPC,MAAM,KACNC,MAAM,iBACNC,IAAI,uBCTGC,EAAqB,kBAChC,2FAC4D,yCAAmB,IAD/E,qD,OCEWC,G,KAA4B,WACvC,OACE,sFACsD,IACpD,cAAC,EAAD,CAASC,QAAQ,iBAAjB,SACE,qBAAKR,IAAKC,EAAkBC,OAAO,KAAKC,MAAM,KAAKE,IAAI,gBAMzDI,EAAU,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUF,EAAc,EAAdA,QAC3B,EAAsCG,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAEA,OACE,uBAAMC,UAAU,0BAAhB,UACE,sBACEC,aAAc,kBAAMF,GAAe,IACnCG,aAAc,kBAAMH,GAAe,IAFrC,SAIGH,IAEFE,GAAe,qBAAKE,UAAU,mBAAf,SAAmCN,QCtB5CS,EAA6B,WACxC,OACE,sFACsD,IACpD,cAAC,EAAD,CAAST,QAAQ,iBAAjB,SACE,qBAAKR,IAAKC,EAAkBC,OAAO,KAAKC,MAAM,KAAKE,IAAI,eAMzDI,EAAU,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUF,EAAc,EAAdA,QAC3B,EAAsCG,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAEA,OACE,uBAAMC,UAAU,0BAAhB,UACE,sBACEI,SAAS,IACTH,aAAc,kBAAMF,GAAe,IACnCG,aAAc,kBAAMH,GAAe,IACnCM,QAAS,kBAAMN,GAAe,IAC9BO,OAAQ,kBAAMP,GAAe,IAC7B,mBAAiB,kBANnB,SAQGH,IAEFE,GACC,qBAAKE,UAAU,mBAAmBO,GAAG,kBAArC,SACGb,QCzBEc,G,MAAM,kBACjB,iCACE,qDACA,uBACA,4CACY,yCADZ,gBAGA,6CACA,cAAC,EAAD,IACA,8CACA,cAAC,EAAD,IACA,uBACA,6DACA,6CACA,cAAC,EAAD,IACA,8CACA,cAAC,EAAD,IACA,uBACA,gEACA,6CACA,qCACA,8CACA,qCACA,uBACA,8CACA,6CACA,qCACA,8CACA,qCACA,uBACA,qDACA,6CACA,qCACA,8CACA,0CCpCJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d7737ad2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/questionMarkIcon.22c38de2.png\";","import React from 'react';\nimport QuestionMarkIcon from '../questionMarkIcon.png';\nexport const TitleAttributeBad = () => (\n  <p>\n    Here's a sentence that may need some clarification.{' '}\n    <img\n      src={QuestionMarkIcon}\n      height=\"12\"\n      width=\"12\"\n      title=\"More info here\"\n      alt=\"More info here\"\n    />\n  </p>\n);\n\n// NOTES:\n// Works well for mouse users to hover\n// Works well for screen reader users due to the use of the alt attribute\n// Does not work for keyboard users\n","import React from 'react';\nexport const TitleAttributeGood = () => (\n  <p>\n    Trick question! There's really not a great way to use the <code>title</code>{' '}\n    attribute for tooltips that work for everyone.\n  </p>\n);\n","import React, { useState } from 'react';\nimport QuestionMarkIcon from '../questionMarkIcon.png';\nimport './Tooltip.css';\n\nexport const ShortContentHoverFocusBad = () => {\n  return (\n    <div>\n      Here's a sentence that may need some clarification.{' '}\n      <Tooltip content=\"More info here\">\n        <img src={QuestionMarkIcon} height=\"12\" width=\"12\" alt=\"Help\" />\n      </Tooltip>\n    </div>\n  );\n};\n\nconst Tooltip = ({ children, content }) => {\n  const [showTooltip, setShowTooltip] = useState(false);\n\n  return (\n    <span className=\"tooltipTriggerContainer\">\n      <span\n        onMouseEnter={() => setShowTooltip(true)}\n        onMouseLeave={() => setShowTooltip(false)}\n      >\n        {children}\n      </span>\n      {showTooltip && <div className=\"tooltipContainer\">{content}</div>}\n    </span>\n  );\n};\n\n// NOTES:\n// Works well for mouse users to hover\n// Does not work for keyboard users because you can't focus the icon\n// Does not work for screen reader users because the tooltip content is not read\n","import React, { useState } from 'react';\nimport QuestionMarkIcon from '../questionMarkIcon.png';\nimport './Tooltip.css';\n\nexport const ShortContentHoverFocusGood = () => {\n  return (\n    <div>\n      Here's a sentence that may need some clarification.{' '}\n      <Tooltip content=\"More info here\">\n        <img src={QuestionMarkIcon} height=\"12\" width=\"12\" alt=\"Help\" />\n      </Tooltip>\n    </div>\n  );\n};\n\nconst Tooltip = ({ children, content }) => {\n  const [showTooltip, setShowTooltip] = useState(false);\n\n  return (\n    <span className=\"tooltipTriggerContainer\">\n      <span\n        tabIndex=\"0\"\n        onMouseEnter={() => setShowTooltip(true)}\n        onMouseLeave={() => setShowTooltip(false)}\n        onFocus={() => setShowTooltip(true)}\n        onBlur={() => setShowTooltip(false)}\n        aria-describedby=\"tooltip-content\"\n      >\n        {children}\n      </span>\n      {showTooltip && (\n        <div className=\"tooltipContainer\" id=\"tooltip-content\">\n          {content}\n        </div>\n      )}\n    </span>\n  );\n};\n","import React from 'react';\nimport { TitleAttributeBad } from './01_title_attribute/TitleAttributeBad';\nimport { TitleAttributeGood } from './01_title_attribute/TitleAttributeGood';\nimport { ShortContentHoverFocusBad } from './02_short_content_hover_focus/ShortContentBad';\nimport { ShortContentHoverFocusGood } from './02_short_content_hover_focus/ShortContentGood';\nimport './App.css';\n\nexport const App = () => (\n  <main>\n    <h1>Accessible Tooltips</h1>\n    <hr />\n    <h2>\n      Using the <code>title</code> Attribute\n    </h2>\n    <h3>Bad Example</h3>\n    <TitleAttributeBad />\n    <h3>Good Example</h3>\n    <TitleAttributeGood />\n    <hr />\n    <h2>Short Content (Hover/Focus)</h2>\n    <h3>Bad Example</h3>\n    <ShortContentHoverFocusBad />\n    <h3>Good Example</h3>\n    <ShortContentHoverFocusGood />\n    <hr />\n    <h2>Short Content (Click/Keypress)</h2>\n    <h3>Bad Example</h3>\n    <p>TODO</p>\n    <h3>Good Example</h3>\n    <p>TODO</p>\n    <hr />\n    <h2>Long Content</h2>\n    <h3>Bad Example</h3>\n    <p>TODO</p>\n    <h3>Good Example</h3>\n    <p>TODO</p>\n    <hr />\n    <h2>Interactive Content</h2>\n    <h3>Bad Example</h3>\n    <p>TODO</p>\n    <h3>Good Example</h3>\n    <p>TODO</p>\n  </main>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}